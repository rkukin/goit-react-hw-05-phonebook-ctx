{"version":3,"sources":["context/themeContext.js","hoc/withTheme.js","components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/ThemeSelector.js","components/Container.js","components/App.js","index.js"],"names":["themeConfig","light","fontColor","bodybg","dark","ThemeContext","React","createContext","withTheme","WrappedComponent","props","Consumer","theme","ContactsForm","styled","form","themeProps","InputLabel","label","FormInput","input","SubmitButton","button","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","onAddContact","config","this","onSubmit","htmlFor","type","id","autoComplete","onChange","Component","ListItem","li","DeleteButton","ContactListItemWrapper","div","handleDelete","contact","key","onClick","List","ul","contacts","map","FilterInput","ToggleLabel","span","toggleTheme","checked","Wrapper","children","App","filter","uuid","alert","find","element","toLowerCase","prevState","contactId","newContacts","indexOf","storedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","Provider","getFilteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2a1bc25.chunk.js","sourcesContent":["import React from 'react';\n\nexport const themeConfig = {\n    light: {\n        fontColor: 'black',\n        bodybg: 'white'\n    },\n    dark: {\n        fontColor: 'white',\n        bodybg: 'black'\n    }\n};\n\nconst ThemeContext = React.createContext(themeConfig.light);\nexport default ThemeContext;","import React from \"react\";\nimport ThemeContext from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n    return function WithTheme(props) {\n        return (\n            <ThemeContext.Consumer>\n                {theme => <WrappedComponent {...props} theme={theme} />}\n            </ThemeContext.Consumer>\n        );\n    };\n};\n\nexport default withTheme;","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid ${props => props.themeProps.fontColor};\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\ncolor: ${props => props.themeProps.fontColor}\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({name: '', number: ''});\r\n  };\r\n\r\n  render() {\r\n\r\n    const {config} = this.props.theme;\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n        <ContactsForm themeProps={config} onSubmit={this.handleSubmit}>\r\n          <InputLabel themeProps={config} htmlFor=\"name\">Name</InputLabel>\r\n          <FormInput themeProps={config} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <InputLabel themeProps={config} htmlFor=\"number\">Number</InputLabel>\r\n          <FormInput themeProps={config} type=\"tel\" name=\"number\" id=\"number\" value={this.state.number}\r\n                     autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <SubmitButton themeProps={config} type=\"submit\">Add contact</SubmitButton>\r\n        </ContactsForm>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(AddContactForm)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nfunction ContactListItem({handleDelete, contact: {id, name, number}, theme}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton themeProps={theme.config} onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactListItem)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nfunction ContactList({contacts, handleDelete}) {\r\n\r\n  return (\r\n    <List>\r\n      {contacts.map(contact => {\r\n        return <ContactListItem key={contact.id} contact={contact} handleDelete={handleDelete}/>\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(ContactList)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Filter({handleChange, theme}) {\r\n\r\n  return (\r\n    <FilterInput themeProps={theme.config} type=\"text\" onChange={handleChange} name=\"filter\" autoComplete='off'/>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(Filter);","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"react-toggle/style.css\";\nimport Toggle from 'react-toggle';\nimport withTheme from \"../hoc/withTheme\";\n\nconst ToggleLabel = styled.span`\nmargin: 10px;\n`;\n\nfunction ThemeSelector({toggleTheme, theme}) {\n  return (\n    <label>\n      <ToggleLabel>{theme.type}</ToggleLabel>\n      <Toggle\n        type=\"checkbox\"\n        checked={theme.type === \"dark\"}\n        onChange={() => toggleTheme()}\n      />\n    </label>\n\n  );\n}\n\nexport default withTheme(ThemeSelector)","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst Wrapper = styled.div`\r\nmargin: 0;\r\npadding: 0;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Container({children, theme}) {\r\n\r\n  return (\r\n    <Wrapper themeProps={theme.config}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default withTheme(Container);","import React, {Component} from \"react\";\r\nimport {uuid} from 'uuidv4';\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport ThemeContext from \"../context/themeContext\";\r\nimport {themeConfig} from \"../context/themeContext\";\r\nimport Container from \"./Container\";\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    theme: 'light'\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    const {contacts, filter} = this.state;\r\n    if (filter === \"\")\r\n      return contacts;\r\n    else\r\n      return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n\r\n    if (storedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(storedContacts)\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  onAddContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number\r\n    };\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.state.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      }\r\n    })\r\n  };\r\n\r\n  handleDelete = (contactId) => {\r\n    const {contacts} = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== contactId);\r\n    this.setState({contacts: newContacts});\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts)\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <ThemeContext.Provider\r\n        value={{\r\n          type: this.state.theme,\r\n          config: themeConfig[this.state.theme]\r\n        }}\r\n      >\r\n        <Container>\r\n          <ThemeSelector toggleTheme={this.toggleTheme}/>\r\n          <h2>PhoneBook</h2>\r\n          <AddContactForm onAddContact={this.onAddContact}/>\r\n          <h3>Contacts</h3>\r\n          <Filter handleChange={this.handleChange}/>\r\n          <ContactList contacts={this.getFilteredContacts()} handleDelete={this.handleDelete}/>\r\n        </Container>\r\n      </ThemeContext.Provider>\r\n\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}