{"version":3,"sources":["context/themeContext.js","hoc/withTheme.js","components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/ThemeSelector.js","components/Container.js","components/App.js","index.js"],"names":["themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","state","type","config","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","ContactsForm","styled","form","themeProps","InputLabel","label","FormInput","input","SubmitButton","button","name","number","handleChange","e","target","handleSubmit","preventDefault","onAddContact","onSubmit","htmlFor","id","autoComplete","onChange","ListItem","li","DeleteButton","ContactListItemWrapper","div","handleDelete","contact","key","onClick","List","ul","contacts","map","FilterInput","ToggleLabel","span","checked","Wrapper","filter","uuid","alert","find","element","toLowerCase","prevState","contactId","newContacts","indexOf","storedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","getFilteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b56128d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst themeConfig = {\n    light: {\n        fontColor: \"black\",\n        bodybg: \"#fff\"\n    },\n    dark: {\n        fontColor: \"white\",\n        bodybg: \"#333333\"\n    }\n};\n\nconst Context = React.createContext();\n\nexport default class ThemeContext extends Component {\n    static Consumer = Context.Consumer;\n\n    toggleTheme = () => {\n        this.setState(state => ({\n            type: state.type === \"dark\" ? \"light\" : \"dark\"\n        }));\n    };\n\n    state = {\n        type: \"light\",\n        toggleTheme: this.toggleTheme,\n        config: themeConfig\n    };\n\n    render() {\n        return (\n          <Context.Provider value={this.state}>\n              {this.props.children}\n          </Context.Provider>\n        );\n    }\n}","import React from \"react\";\nimport ThemeContext from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n    return function WithTheme(props) {\n        return (\n            <ThemeContext.Consumer>\n                {theme => <WrappedComponent {...props} theme={theme} />}\n            </ThemeContext.Consumer>\n        );\n    };\n};\n\nexport default withTheme;","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid ${props => props.themeProps.fontColor};\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\ncolor: ${props => props.themeProps.fontColor}\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({name: '', number: ''});\r\n  };\r\n\r\n  render() {\r\n\r\n    // const {config} = this.props.theme;\r\n    const config = this.props.theme.config[this.props.theme.type];\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n        <ContactsForm themeProps={config} onSubmit={this.handleSubmit}>\r\n          <InputLabel themeProps={config} htmlFor=\"name\">Name</InputLabel>\r\n          <FormInput themeProps={config} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <InputLabel themeProps={config} htmlFor=\"number\">Number</InputLabel>\r\n          <FormInput themeProps={config} type=\"tel\" name=\"number\" id=\"number\" value={this.state.number}\r\n                     autoComplete='off'\r\n                     onChange={this.handleChange}/>\r\n\r\n          <SubmitButton themeProps={config} type=\"submit\">Add contact</SubmitButton>\r\n        </ContactsForm>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(AddContactForm)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nfunction ContactListItem({handleDelete, contact: {id, name, number}, theme}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton themeProps={theme.config[theme.type]} onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactListItem)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport withTheme from \"../hoc/withTheme\"\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nfunction ContactList({contacts, handleDelete}) {\r\n\r\n  return (\r\n    <List>\r\n      {contacts.map(contact => {\r\n        return <ContactListItem key={contact.id} contact={contact} handleDelete={handleDelete}/>\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(ContactList)","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Filter({handleChange, theme}) {\r\n\r\n  return (\r\n    <FilterInput themeProps={theme.config[theme.type]} type=\"text\" onChange={handleChange} name=\"filter\" autoComplete='off'/>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTheme(Filter);","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"react-toggle/style.css\";\nimport Toggle from 'react-toggle';\nimport withTheme from \"../hoc/withTheme\";\n\nconst ToggleLabel = styled.span`\nmargin: 10px;\n`;\n\nfunction ThemeSelector(themeProps) {\n\n  return (\n    <label>\n      <ToggleLabel>{themeProps.theme.type}</ToggleLabel>\n      <Toggle\n        type=\"checkbox\"\n        checked={themeProps.theme.type === \"dark\"}\n        onChange={() => themeProps.theme.toggleTheme()}\n      />\n    </label>\n\n  );\n}\n\nexport default withTheme(ThemeSelector)","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst Wrapper = styled.div`\r\nmargin: 0;\r\npadding: 10px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Container({children, theme}) {\r\n\r\n  return (\r\n    <Wrapper themeProps={theme.config[theme.type]}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default withTheme(Container);","import React, {Component} from \"react\";\r\nimport {uuid} from 'uuidv4';\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport Container from \"./Container\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: ''\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    const {contacts, filter} = this.state;\r\n    if (filter === \"\")\r\n      return contacts;\r\n    else\r\n      return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storedContacts = localStorage.getItem('contacts');\r\n\r\n    if (storedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(storedContacts)\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  onAddContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number\r\n    };\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.state.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact]\r\n      }\r\n    })\r\n  };\r\n\r\n  handleDelete = (contactId) => {\r\n    const {contacts} = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== contactId);\r\n    this.setState({contacts: newContacts});\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts)\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n        <ThemeSelector/>\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm onAddContact={this.onAddContact}/>\r\n        <h3>Contacts</h3>\r\n        <Filter handleChange={this.handleChange}/>\r\n        <ContactList contacts={this.getFilteredContacts()} handleDelete={this.handleDelete}/>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport ThemeContext from \"./context/themeContext\";\n\nReactDOM.render(<ThemeContext> <App /> </ThemeContext>, document.getElementById('root'));\n\n"],"sourceRoot":""}